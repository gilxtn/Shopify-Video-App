generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model VideoPlayCount {
  productId BigInt
  videoUrl  String
  playCount Int     @default(0)
  shop      String?

  @@id([productId, videoUrl])
}

model VideoPageView {
  id         Int     @id @default(autoincrement())
  shop       String
  productId  BigInt
  pageType   String
  pageHandle String?
  viewCount  Int     @default(0)

  @@unique([shop, productId, pageType, pageHandle])
}

model Activity {
  id         Int          @id @default(autoincrement())
  shop       String
  productId  BigInt
  type       ActivityType
  videoUrl   String?
  pageType   String?
  pageHandle String?
  createdAt  DateTime     @default(now())
}

model ProductExtendedInfo {
  id            Int          @id @default(autoincrement())
  productId     BigInt
  shop          String
  productTitle  String
  videoUrl      String
  aiSummary     String?
  highlights    String?
  source_method SourceMethod
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @default(now()) @updatedAt @db.Timestamp(6)
  isMain        Boolean      @default(false)

  @@unique([productId, shop, videoUrl])
}

model Prompt {
  id        Int      @id @default(autoincrement())
  shop      String?
  content   String?
  carousel  String?
  summary   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum SourceMethod {
  AUTO
  MANUAL
}

enum ActivityType {
  VIDEO_PLAY
  PAGE_VIEW
}
